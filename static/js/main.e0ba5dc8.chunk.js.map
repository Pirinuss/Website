{"version":3,"sources":["components/sidebar/Sidebar.js","components/mainPanel/MainPanel.js","components/about/About.js","components/contact/Contact.js","components/projects/ProjectItem.js","components/projects/ProjectWelcomePage.js","components/projects/Projects.js","App.js","serviceWorker.js","index.js","components/projects/githubIcon.png","components/projects/WebsiteImage.PNG","components/projects/WorkloadGeneratorImage.PNG","components/projects/PasswortManagerImage.png"],"names":["Sidebar","props","state","text","this","setState","className","to","onMouseOver","changeInfoText","React","Component","MainPanel","About","animation","keyframes","zoomIn","BouncyDiv","styled","div","Contact","ProjectItem","imageClassName","imageClass","title","content","src","githubIcon","alt","image","ProjectWelcomePage","Projects","breakpoints","breakpoint","settings","slidesToShow","slidesToScroll","dots","scrollOnDevice","WebsiteImage","PasswortManagerImage","WorkloadGeneratorImage","App","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.e0ba5dc8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport './Sidebar.css';\r\n\r\nclass Sidebar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {text: 'Willkommen!'};\r\n    }\r\n\r\n    changeInfoText(text) {\r\n        this.setState({text: text});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"sidebar\">\r\n                <div className=\"header\">\r\n                    <div className=\"deco-bar\"></div>\r\n                </div>\r\n                <div className=\"info-container\">\r\n                    <h2 className=\"name-label\">Marc Wendelborn</h2>  \r\n                </div>\r\n                <div className=\"menu\">\r\n                    <div className=\"link-container\">\r\n                        <Link to='/' className=\"menu-link\" onMouseOver={() => {this.changeInfoText('Willkommen!')}}>Home</Link>\r\n                    </div>\r\n                    <div className=\"link-container\">\r\n                        <Link to='/about' className=\"menu-link\">Ãœber mich</Link>\r\n                    </div>\r\n                    <div className=\"link-container\"> \r\n                        <Link to='/projects' className=\"menu-link\">Projekte</Link>\r\n                    </div>\r\n                    <div className=\"link-container\">\r\n                        <Link to='/contact' className=\"menu-link\">Kontakt</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"deco-bar bottom\"></div>\r\n                <div className=\"footer\">\r\n                    <p>Copyright @2019</p>\r\n                </div>\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nclass MainPanel extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"mainPanel\">\r\n            </div>    \r\n        );\r\n    }\r\n}\r\n\r\nexport default MainPanel;","import React from 'react';\r\n\r\nexport class About extends React.Component {\r\n    render() {\r\n        return (\r\n           <h1>ABOUT</h1>\r\n        );\r\n    }\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport './Contact.css';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { zoomIn } from 'react-animations';\r\n\r\nconst animation = keyframes`${zoomIn}`;\r\n \r\nconst BouncyDiv = styled.div`\r\n  animation: 1s ${animation};\r\n`;\r\nclass Contact extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"contact\">\r\n                <BouncyDiv>\r\n                    <div className=\"contact-container\">\r\n                        <h1 className=\"test\">Kontakt</h1>\r\n                    </div>\r\n                </BouncyDiv>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport './Projects.css'\r\nimport githubIcon from './githubIcon.png'\r\n\r\nclass ProjectItem extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        const imageClassName = 'projectItem-image ' + this.props.imageClass;\r\n        return (\r\n            <div className=\"projectItem-container\">\r\n                <div className=\"projectItem-header-container\">\r\n                    <h1 className=\"projectItem-header\">{this.props.title}</h1>\r\n                </div>\r\n                <div className=\"projectItem-body-container\">\r\n                    <div className=\"projectItem-text-content\">\r\n                        <div className=\"content-top-container\">\r\n                            <p>{this.props.content}</p>\r\n                        </div>\r\n                        <div className=\"content-bottom-container\">\r\n                            <p className=\"icon-text\">Zum Projekt:</p>\r\n                            <img className='github-icon' src={githubIcon} alt=\"Icon kann nicht angezeigt werden\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"projectItem-image-content\">\r\n                        <img className={imageClassName} alt=\"Bild kann nicht angezeigt werden\" src={this.props.image} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"projectItem-footer-container\">\r\n                    <div className=\"deco-div\" />\r\n                    <h2 className=\"projectItem-header\" />\r\n                    <div className=\"deco-div\" />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectItem;","import React from 'react';\r\nimport './Projects.css';\r\n\r\nclass ProjectWelcomePage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projectItem-container\">\r\n                    <div className=\"welcome-container\">\r\n                        <p className=\"project-welcome-text\">Klicke nach rechts um meine bisherigen Software Projekte zu sehen!</p>\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectWelcomePage;","import React from 'react';\r\nimport ProjectItem from './ProjectItem.js';\r\nimport ProjectWelcomePage from './ProjectWelcomePage.js'\r\nimport InfiniteCarousel from 'react-leaf-carousel';\r\nimport WebsiteImage from './WebsiteImage.PNG';\r\nimport WorkloadGeneratorImage from './WorkloadGeneratorImage.PNG';\r\nimport PasswortManagerImage from './PasswortManagerImage.png';\r\nimport './Projects.css'\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { zoomIn } from 'react-animations';\r\n\r\nconst animation = keyframes`${zoomIn}`;\r\n \r\nconst BouncyDiv = styled.div`\r\n  animation: 1s ${animation};\r\n`;\r\n\r\nconst WebsiteContent = 'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.';\r\nconst WorkloadGeneratorContent = 'Meine Bachelorarbeit! Mit diesem in Java geschriebenem Tool kÃ¶nnen spielend leicht HTTP- und FTP-Request erzeugt werden. Somit eignet sich das Tool hervorragend, um Lasttests fÃ¼r Netzwerkapplikationen aufzusetzen. DarÃ¼ber hinaus kÃ¶nnen auch mit Hilfe von speziellen Requests, die auf dem BFT-SMaRt Protokoll aufbauen, sicherheitskritische, verteile Systeme getestet werden.';\r\nconst PasswordGeneratorContent = 'Mit diesem Projekt habe ich erste Erfahrungen im Designen von NutzeroberflÃ¤chen gesammelt. Dieses einfache Tool ermÃ¶glicht das anlegen von Passwortkategorien, auf die einzelne PasswÃ¶rter aufgeteilt und abgespeichert werden kÃ¶nnen. ';\r\n\r\nclass Projects extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"projects\">\r\n                <div className=\"header-container\">\r\n                </div>\r\n                <div className=\"projects-container\">\r\n                    <div>\r\n                    <InfiniteCarousel\r\n                        breakpoints={[\r\n                            {\r\n                              breakpoint: 100,\r\n                              settings: {\r\n                                slidesToShow: 1,\r\n                                slidesToScroll: 3,\r\n                              },\r\n                            },\r\n                          ]} \r\n                        dots={true}\r\n                        slidesToScroll={1}\r\n                        slidesToShow={1}\r\n                        scrollOnDevice={true}>\r\n                        <ProjectWelcomePage />\r\n                        <ProjectItem title=\"Website\" content={WebsiteContent} image={WebsiteImage}></ProjectItem>\r\n                        <ProjectItem title=\"Passwort Manager\" content={PasswordGeneratorContent} image={PasswortManagerImage} imageClass='website-image'></ProjectItem>\r\n                        <ProjectItem title=\"Workload Generator\" content={WorkloadGeneratorContent} image={WorkloadGeneratorImage}></ProjectItem>\r\n                    </InfiniteCarousel>   \r\n                    </div> \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport './App.css';\nimport Sidebar from './components/sidebar/Sidebar';\nimport MainPanel from './components/mainPanel/MainPanel';\nimport About from './components/about/About';\nimport Contact from './components/contact/Contact';\nimport Projects from './components/projects/Projects';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Sidebar ></Sidebar>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/projects\">\n            <Projects />\n          </Route>\n          <Route path=\"/contact\">\n            <Contact />\n          </Route>\n        </Switch>  \n        <MainPanel className=\"mainPanelContainer\"></MainPanel>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/githubIcon.f5211378.png\";","module.exports = __webpack_public_path__ + \"static/media/WebsiteImage.e72b20ff.PNG\";","module.exports = __webpack_public_path__ + \"static/media/WorkloadGeneratorImage.e933504d.PNG\";","module.exports = __webpack_public_path__ + \"static/media/PasswortManagerImage.21dc50e4.png\";"],"sourceRoot":""}